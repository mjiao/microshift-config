
---
apiVersion: v1
kind: Namespace
metadata:
  annotations:
    workload.openshift.io/allowed: "management"
  name: "open-cluster-management-agent"

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: klusterlet
  namespace: "open-cluster-management-agent"
imagePullSecrets:
- name: "open-cluster-management-image-pull-credentials"

---
apiVersion: v1
kind: Secret
metadata:
  name: "bootstrap-hub-kubeconfig"
  namespace: "open-cluster-management-agent"
type: Opaque
data:
  kubeconfig: "YXBpVmVyc2lvbjogdjEKY2x1c3RlcnM6Ci0gY2x1c3RlcjoKICAgIGNlcnRpZmljYXRlLWF1dGhvcml0eS1kYXRhOiBMUzB0TFMxQ1JVZEpUaUJEUlZKVVNVWkpRMEZVUlMwdExTMHRDazFKU1VSTmFrTkRRV2h4WjBGM1NVSkJaMGxKUWlzek5tZEhLMkZ6V1dkM1JGRlpTa3R2V2tsb2RtTk9RVkZGVEVKUlFYZE9la1ZUVFVKQlIwRXhWVVVLUTNoTlNtSXpRbXhpYms1dllWZGFNRTFUUlhkSWQxbEVWbEZSUkVWNGFISmtWMHBzVEZkR2QyRllUbXhqYmxwc1kya3hjMWxwTVhwaFYyUjFXbGhKZHdwSWFHTk9UV3BKZDAxVVJUVk5ha1Y2VG5wSk5WZG9ZMDVOZWtsM1RWUkZNMDFxUlhwT2VrazFWMnBCTTAxU1NYZEZRVmxFVmxGUlRFVjNiSFpqUjFaMUNtTXlhSEJhYmxGNFNWUkJaa0puVGxaQ1FVMVVSMGQwTVZsdFZYUlpXRUp3WXpKV2VXUnRWbmxNVjNocFRGaE9jRm95Tld4amFrTkRRVk5KZDBSUldVb0tTMjlhU1doMlkwNUJVVVZDUWxGQlJHZG5SVkJCUkVORFFWRnZRMmRuUlVKQlRqVm1iV3BsWjBreGRHMTVOREJEUzBWSWJrc3phVlkxWTJ4MFoyRlhVZ3BJTkRoblJFTXpSamg1WjI1aVJIQlZPRTFJT0VVeksyTnpaalJ1VGl0c1JrdDNkMjFGWjNBemMyUTVkRTVIUzFGc1prSktiV3BOYm5kQ1NFSmxiMVZCQ2xoWE5HRlNUSHA1VW5Fd2JUTnhOV2RXUlhsME1qVjJWMlkzZFVSTk1qVktlbVpXVld0aFZHdFpRV1ZDZVc5VFVXcFhNVXR4VkVKNlkySklaWE13VUZNS09GSkVabTByWWtremRVcGFlbWxMYzJSQlZISklOSGN3ZFV4dVptWlpjaXRTUlVaUlJXMXhOaTlWUmt0YVpVTnRRMkl5ZDNCc1NtOVhNRXhOT1dNMVZ3b3dLelJZVFd0RFVYRndlbU0wZVdOSlFVMHdhbkJDVlhKc1ltcFViWGxLUW1SMVluaFVkV3ROU21jMFZWazJhVXB5VDNOelRFeGxaMW93U0ZWWFNGVnZDbkJuVFhCdFZGRTRlbEo1VEUxbk1sRTNPR1k0VGs4NE4ybHJiRVJaTW1kNVpHcElZelpXVUhGM2RGUnRNMHRUTVVSdVYwVXdaVEJEUVhkRlFVRmhUa01LVFVWQmQwUm5XVVJXVWpCUVFWRklMMEpCVVVSQlowdHJUVUU0UjBFeFZXUkZkMFZDTDNkUlJrMUJUVUpCWmpoM1NGRlpSRlpTTUU5Q1FsbEZSa0pWUndwMFdISlFNMUJGWkdGQ2VWSkZXVUZqUm1kbVltMTFjbGhOUVRCSFExTnhSMU5KWWpORVVVVkNRM2RWUVVFMFNVSkJVVVJqWkhaamRpdGFlRTU1WVZSckNtVXlTMjVpTm5kclpVRTRhMFUyWW1oYU5qVkhXWGRGV21Oa2JGcDVXVkZpVnpCWmVrWlJjVXhqUVdNeFVUQXdVMlZNVGtsdVJpOWhiMDVJVVhwNksxb0tiRTUyVDJGd2JXUlFLM2xxVVVZclQyZFFZVGxCVEdJNGMxaEJhRUZ1VmpCVFlVUTRZbXh1Wm5vNFJHdGFjV3hGTDJweU1XODBTVFF4YW1acFZqQjFkUW96U25kMWNsZzFRWEZyWkZnM1drODJjbWRJZEZKUmIwbFZUa0ptY21GVVJXNXlaM0YwY2xKclRVeGxNVEJuUVUxTFpYVnhjMjE0S3poYU1FUndaRlpsQ2poM2FWRjBTbFJCYURSYVdtSjJTR0l2VUU5QmFqVTRRVEo0T1M5UE5YTldhV2x5UVdWUVFqRldUR3N3UVhKb2VtbFJhVWw2V0VwUmQzUmtZVTV2ZG5FS2JHOWxSM1puZFhSaWJUUlRRamhNV0dKRVMxSlpOMlpaYmxkWGNWa3dVVGxEUkhSTmEwTTBOMkZqUTFkTmRqSnpVMFpPVG5waE1HZ3ZhVEpGY0ZsSlNncEhRbk55V0RkNGVRb3RMUzB0TFVWT1JDQkRSVkpVU1VaSlEwRlVSUzB0TFMwdENpMHRMUzB0UWtWSFNVNGdRMFZTVkVsR1NVTkJWRVV0TFMwdExRcE5TVWxFVVVSRFEwRnBhV2RCZDBsQ1FXZEpTVWxsTlZkb1JEVkNjVkJCZDBSUldVcExiMXBKYUhaalRrRlJSVXhDVVVGM1VHcEZVMDFDUVVkQk1WVkZDa040VFVwaU0wSnNZbTVPYjJGWFdqQk5VMmQzU21kWlJGWlJVVVJGZURseVpGZEtiRXhYUm5kaFdFNXNZMjVhYkdOcE1YTmlNazVvWWtkb2RtTXpVWFFLWXpKc2JtSnRWbmxOUWpSWVJGUkplVTFFUlhoUFZFbDRUWHBqZVU5V2IxaEVWRTE1VFVSRmVFNTZTWGhOZW1ONVQxWnZkMUJxUlZOTlFrRkhRVEZWUlFwRGVFMUtZak5DYkdKdVRtOWhWMW93VFZObmQwcG5XVVJXVVZGRVJYZzVjbVJYU214TVYwWjNZVmhPYkdOdVdteGphVEZ6WWpKT2FHSkhhSFpqTTFGMENtTXliRzVpYlZaNVRVbEpRa2xxUVU1Q1oydHhhR3RwUnpsM01FSkJVVVZHUVVGUFEwRlJPRUZOU1VsQ1EyZExRMEZSUlVGMEx6aEpSM0JPZG5rMFVGY0tiVTAzUWpOcVUyaENMM1I0WW01T1RHSkpNWGMwV0VKQ2QxZDROVkJoV2xaUlIzbEtjVUpZUlV4cFlUTlNOek50V2xCT2NsQjRNM1J5VGxVdk9YQnJTQXBCYVdaRVJuaFdkSGRTU1VaMmVrSnRWVlUwTUVOaWJGRjNUWEUxYjNoamEyUlZkWGxWV1ZjMmVTdFVURkpuWkdWUmNsWlVOVGxDUkU1cVVrOXBibkozQ21kbFUxSnFSbk5uYVVScFQyMUhhREoxTkRWb2VrRnlibmRQTDIxSVkxUlhURlJoWVN0UGRuSnlabUpXU0ZoSFZUbG9NSEJ1WkZkRGMyNXhaVGs0T1RBS1VFWnZRekpHZDFKYU5XaFdXbEIxUjNSRWVVMHpibkIyZW5ORldqY3lPVGR2YlVaTVIwMTRjbE4wT1hSU1dYTjJjV2R5TjJWNlVFMTBjbFJTTm5wYVJncGxNWE5zUlZGNlkxTjJSa3czWjBKaWRWbEViakZST0dKWU1USmliVUZvVjNBck9YVmtaRUZxTW5OTFZ6Tk5iemRIVFZGTlMzSnBjbEJHVDFwalptOTFDazlzTmtKaE0zQlJSSGRKUkVGUlFVSnZNRWwzVVVSQlQwSm5UbFpJVVRoQ1FXWTRSVUpCVFVOQmNWRjNSSGRaUkZaU01GUkJVVWd2UWtGVmQwRjNSVUlLTDNwQlpFSm5UbFpJVVRSRlJtZFJWVzk2WTNaeGJWRlFUMVZPT1ZSNFZISnNOVVpaUVVVNU5uZGlZM2RFVVZsS1MyOWFTV2gyWTA1QlVVVk1RbEZCUkFwblowVkNRVVZOYW5Ob1NuVm5iVkp5TVRnMFVHbEhkbWxYVTJReE5rdFdZWEJuUWs1dE5HTXhhemxKZVZKaGNsZ3lZVlpPY21vdmFDOWFSME14U0hKeUNuZEZTaTlsZERoSWR5dGxjR3BtYURoUVVVRmFXVzk0TTNOVVFVSkxNME5hZW1WSk0wUkJWbVZ1YlZWRGRIWlVOM3B4VVZVMkwzVlZlVTgxYWtSWWQzVUtRVWd4ZFhrclpISlRUVlZMYURsU2JuWTJLMmhsYlRkTFJrbERiVGh0UkZVeFNFUlVhVzAzYVRjMWVsSnZMemQzY2pOdllXSlNlQ3Q0WldZMVR6QnBNUW92VFRaSE0ybE9Oa1ZHVlROaVRucFFVbXBhTUhFM2RteGlVWFkzVkRKNVRHVmxWVkJRTlVkNE0xVk1RbXBaVUVVd1NVSlhWRVZST1RSNmNWbFZNbVZzQ2pSV2RXSm1ObXhvTjNsWFdrVkZlazl5TjBSUVdXdDJOa1ZqVjJSUFVrRmFiSGhoYzJOcGFWaHVhRFZuTjFwQ09XWjBXRlZHUWtGMmQybFFVVUZUUkUwS04zRm1Temh1ZEZReVFUVXZlRVJEYmsxNlIzWnZSbVV6Tml0elBRb3RMUzB0TFVWT1JDQkRSVkpVU1VaSlEwRlVSUzB0TFMwdENpMHRMUzB0UWtWSFNVNGdRMFZTVkVsR1NVTkJWRVV0TFMwdExRcE5TVWxFVkVSRFEwRnFVMmRCZDBsQ1FXZEpTVXBCUjJoNVRrRnJkalYzZDBSUldVcExiMXBKYUhaalRrRlJSVXhDVVVGM1VrUkZVMDFDUVVkQk1WVkZDa040VFVwaU0wSnNZbTVPYjJGWFdqQk5VelIzVEVGWlJGWlJVVVJGZVZaeVpGZEtiRXhYUm5kaFdFNXNZMjVhYkdOcE1YcGFXRW95WVZkT2JFeFhOV3dLWkVoa2RtTnRjM1JqTW14dVltMVdlVTFDTkZoRVZFbDVUVVJGZUU5VVNYaE5lbU41VDFadldFUlVUWGxOUkVWNFRucEplRTE2WTNsUFZtOTNVa1JGVXdwTlFrRkhRVEZWUlVONFRVcGlNMEpzWW01T2IyRlhXakJOVXpSM1RFRlpSRlpSVVVSRmVWWnlaRmRLYkV4WFJuZGhXRTVzWTI1YWJHTnBNWHBhV0VveUNtRlhUbXhNVnpWc1pFaGtkbU50YzNSak1teHVZbTFXZVUxSlNVSkpha0ZPUW1kcmNXaHJhVWM1ZHpCQ1FWRkZSa0ZCVDBOQlVUaEJUVWxKUWtOblMwTUtRVkZGUVhOdE1UaFZObGxOZVdSQmFHTTFRVGxZZVZacGRrSkRhMDFzVkdwM1YzTnpRbkZGZEZoTU5qVlpLMHN4WVV4YWNVWkpZakJ6TVhRdmFYTldZUXB1Y21SUVRERjVjbWcxYlVoeWNUVm5PRXRaTUhjNFFXNDRVM1I1Tm0wclVuWkpVR3d3UW0xcWFsWnhSRU5xTHpRcmRuVmpUVkJoVURKSVFrSk1VV3BJQ21aM1pFZzRURGR6TjNSS2NrNUdVelpWY3paaGRqWndla1ZDZWt4cVpVOU5TazlUVkhwTlZFMVpiVWRRWmxCeGJIRmFSRWhQV1VjMlpqZHBTbFJMV1ZrS1EwbE1SVGgwUTNFeWJ6RnRVVGRrYVV4R1VYWXZPVGhQUjJjM05HZHBSa1ozU2t4emExaDFaRGxaWlhnNWFqZHNkMEp1TjBKSGRWaDRXbWhJY21KTVNRb3Jha00zT0ROTmQxTkZWakJtYkdOSmFVOWFRMU5oUzNKNVpEWXlTMWQ0V1RZeWJYZHBiMUJqUjFWSU5HTTVRVEpMZW1GQmFTODViV1J6YjBWT2J6VkxDbkkzZVdoSWFUTnRNbFpzWVRGcFMwRk5SRmxzYjJwSEx6SlJTVVJCVVVGQ2J6QkpkMUZFUVU5Q1owNVdTRkU0UWtGbU9FVkNRVTFEUVhGUmQwUjNXVVFLVmxJd1ZFRlJTQzlDUVZWM1FYZEZRaTk2UVdSQ1owNVdTRkUwUlVablVWVjJaVnB4UWk4eWVYVk9RbGhxZFV4VmMySnVXblE1UTJOd2RsbDNSRkZaU2dwTGIxcEphSFpqVGtGUlJVeENVVUZFWjJkRlFrRkNkalpaY0N0NVZIcENOVEJZZG5CM05ETlBNM1p5VkN0RlZTdG5NbUpwY0c5MFdERkxSR1ZPTkVOakNtRk9lVE5WYVdKSFNHcHFkRVV2WjAxSU5sZ3phSGhUTm10UU4wVkdSbTEwY2xWMlYyRk5UVXhJU1ZseVZsUnJheTlYYjIxUVowNTZUMmhCTmpCVk9WVUtiRTFtWVhGTkwzZE5OWEpvYlZOR1MydHBibEEzVmxOSVFYYzVWSEl5V21OemFHeEVTWGt6ZEdoUGFrNWlTR3dyUkdrekswUjJUVmhIYjFOWllXb3ZWd3B1T0d0alpYRjFOM2MxWm5wU1FsVk1kbkZMY1Roc2RsbE1ZbXRsUnpseGRURjFOU3Q0Y200clNuWmxPRk5OZW14TWMxUkNWblpvYUVSVFpURlpTM053Q25Sa2VrVnZkWEJoYkZVcmFEbENWRkF5TmtKbGQycFpTamRSY205UVVYSlljR1pXZGxSNGVXZzJRWFprWkhOTE1VSkRlRWhGWWk5cFNHSmxZbkpFU3pNS1dpc3ZjVEZITTNkamJHMVFOemhFVWxOdVVDdFlOVmxEWm1kV1IybE5UMWhOTDFkTk1HbGlUVmROZHowS0xTMHRMUzFGVGtRZ1EwVlNWRWxHU1VOQlZFVXRMUzB0TFFvdExTMHRMVUpGUjBsT0lFTkZVbFJKUmtsRFFWUkZMUzB0TFMwS1RVbEpSR3g2UTBOQmJpdG5RWGRKUWtGblNVbE1TQzlrYTBoUlRtNWFiM2RFVVZsS1MyOWFTV2gyWTA1QlVVVk1RbEZCZDFkVVJsaE5SbFZIUVRGVlJRcEJkM2hQWWpOQ2JHSnVUbTloVjFvd1RGZDBNVmx0VlhSWldFSndZekpXZVdSdFZubE1WemwzV2xoS2FHUkhPWGxZTW5oMldUSkdjMkZIT1hwa1F6RjVDbHBYVG5aa2JWWjVaVk14ZWxwWVNqSmhWelZ1VEZoT2NGb3lOV3hqYTBGNFRtcFJlVTVxU1RWTlZFMTNUVUkwV0VSVVNYbE5SRVY0VDFSSmVFNVVTWGNLVDFadldFUlVUWGxOUkVWNFRucEplRTVVU1hoTlJtOTNWMVJHV0UxR1ZVZEJNVlZGUVhkNFQySXpRbXhpYms1dllWZGFNRXhYZERGWmJWVjBXVmhDY0Fwak1sWjVaRzFXZVV4WE9YZGFXRXBvWkVjNWVWZ3llSFpaTWtaellVYzVlbVJETVhsYVYwNTJaRzFXZVdWVE1YcGFXRW95WVZjMWJreFlUbkJhTWpWc0NtTnJRWGhPYWxGNVRtcEpOVTFVVFhkTlNVbENTV3BCVGtKbmEzRm9hMmxIT1hjd1FrRlJSVVpCUVU5RFFWRTRRVTFKU1VKRFowdERRVkZGUVhKSE4wTUtUbWg2TjBWT2NFeFFUWEp3U0dkUVVtUk9XR1JxWVdjek9Xa3ZaR2s1Y0UxbFpXTTNSM1JFYkdOWlQzRXdSRlZ2WjBjeksxbHdiV3haWm13eFFXbDJlZ3A1VUVObVRHWTBSa1ZTUW1sRU16SlJOVTAxYm5WWmRHUlJZbU5sT0cxcVFsZE5jekJUWVhKUGJFOHJVMmRSWVhGWVFucDRZbEIxTVRGTFFYQTBVRTByQ2xkeGFWcGhXWFI2YUdaaFYzUm1TMnBKZDBobmJqRk9lRzFQYWxKYVpVMXBVRGQyYzB4SmJqSnpZVFE1V21wMmJrOWxZU3RoYW01TWJIVnNja2hzU2xNS2FrcDJNbGMwZDJ0bFVHZElSSEJMTm1KTldtVnhjV2M1VkVFNVJWRlBjbEJuVGtack1XWjRTWFUyTWt4NWVsZENNbTR3UkVKelFqVTVObEppVGxjMFpncFVkRU5hYnpGWk5WSmlkVXRMSzB4elUxWXpkVEI0TWpneFN6TXZkR1pYZDFGalMzUXJTVmwzYWpsSlJrcE1PUzlhWW5OVFlTOVRWR0ZoVGtwaWFXbHpDazlWY1UxNU5XUlVjM281V1ZGVlRURXJVVWxFUVZGQlFtOHlUWGRaVkVGUFFtZE9Wa2hST0VKQlpqaEZRa0ZOUTBGeFVYZEVkMWxFVmxJd1ZFRlJTQzhLUWtGVmQwRjNSVUl2ZWtGa1FtZE9Wa2hSTkVWR1oxRlZiVUl5VlhWbFJIY3dNRTVNWjNSNVVIaDZVR2hLZDBaNFZISlpkMGgzV1VSV1VqQnFRa0puZHdwR2IwRlZiVUl5VlhWbFJIY3dNRTVNWjNSNVVIaDZVR2hLZDBaNFZISlpkMFJSV1VwTGIxcEphSFpqVGtGUlJVeENVVUZFWjJkRlFrRkdSblJPV2pkVkNrWkVSSE5oUjJNMk5rWkhWbXAzTVhReFVqQnVhbEI0WWxKa2VVNDNVVEl5Wmk5WVMzTkdTRW8zUW1zeGRsVTBSbGRPZG1nMVIxWmhXRTFEUTJKRlVqVUtkMUJ3YnpneVJqSjBkME5LVWtaa2VrOVFhVkpoUWxOSU5WSjJOMDlGUkhwSU5VZ3pkaTlVVEhabFJteHBURWhwWkZZeFYxVmxhRnBSYVdFMmNYaHJjUXBXZFVGa2MweE5lREV2ZWs5Tk5uUmtiRXBuWVVzMlowbE5TR0Z1ZDBzMUsyOWlPVlp0TlZKVE4zRjBRMHhoVjNSc1FuQmhSSGRLUkVwallVVnJaR3RFQ21kR1dUbG5jVGt6VGpOblJYWTBPVE5HT0VaRllrcG9lRnBZYzBrMlRVWkNOMnd5TVZoSFNrOUJhMGxPZWtsYVkwVXhlWFI1Tm1FM2IzWm9RMjh5WjA0S2IxbFNjRTlJU210MlNHcG5Ta2hHZVdaU1ZuQjNXREl5U2xSaGQxTm9iVE5TV0daUlMwUnpabmRPYzNSS1dXbGpVRFYxTWpGUVVuUlFkR012VlRKNVZ3b3hTaTlvYjJFemVsWkVWRlJzVUUwOUNpMHRMUzB0UlU1RUlFTkZVbFJKUmtsRFFWUkZMUzB0TFMwS0xTMHRMUzFDUlVkSlRpQkRSVkpVU1VaSlEwRlVSUzB0TFMwdENrMUpTVVJrZWtORFFXd3JaMEYzU1VKQlowbEpXRmd5V0hoVWIyMUhjbTkzUkZGWlNrdHZXa2xvZG1OT1FWRkZURUpSUVhkS2FrVnJUVU5KUjBFeFZVVUtRWGQzWW1GWE5XNWpiVlo2WTNreGRtTkhWbmxaV0ZKMlkydEJlRTVxVVhsT2FrazFUWHByTlUxQ05GaEVWRWw1VFVSRmVFOVVTWGhPVkZrd1RVWnZXQXBFVkVrd1RVUkZlRTlVU1hoT1ZGa3dUVlp2ZDB0NlJYQk5RMk5IUVRGVlJVRjNkMmRMYVRWb1kwaENla3h0T1dwa1J6aDBXVEo0TVdNelVteGphVFZzQ2xwSFpHeE1WM2hvV1drMWRWcFlVWGRuWjBWcFRVRXdSME5UY1VkVFNXSXpSRkZGUWtGUlZVRkJORWxDUkhkQmQyZG5SVXRCYjBsQ1FWRkVVVE5GUlZFS2NVVnNXRzFFUkdaMmFGTlRaMFV6YVZaeWIxRjFNRXBTYVdKT01XVTJXV3gyVFZFMFYyNXlZbEpYTjNCSVdWQnJSVk5KYmpOUlVtVmthSGcwZFRoNWFnb3JlSEZFTVN0TE1UUXJXVTFsWVRWbmNGRTFOblpSTDFWVU1FWmpPSEFyTXpoMGFtVlpiM1EzU0V0WE4xTlVVbGRPZUZodlNqQkRWMUZOUm5KNk9USlhDbk5qS3prMmNqRlBhbEV5YVd3MGIwTllhVEJ5UTFneEwyZHZkRVpRTjNsVlZGTlRZVlppYlVzcmVXRlhSV1o0VmtKRGMybDJhVFJuUkdJNVRITmhNbXdLWlhCU1ZsTktkM1pKUVVRdmJIUTBNVUYxVm10RmFuQnhkVlZ2TkRWemEySXdkbHBJYmpKc2FXSjJka2xLZDFVeWFrRmpSSGhyV0ZaTGVYVndZbUV2UmdweE5rWnljMFZwVGpOV01uTnhibE5ZUW1KQ2IzRndZbXgxYm5kbWRubHJkMVpOYmxBMVRIVnRkVGt2VkdGU2RXVktUR1JKTUN0bGJFTXdSR0ZyYldvdkNqRjZZbUZ6TnpabGEwcEVSV2w1YlRsQlowMUNRVUZIYW1kaFRYZG5ZVUYzUkdkWlJGWlNNRkJCVVVndlFrRlJSRUZuVjJkTlFrMUhRVEZWWkVwUlVVMEtUVUZ2UjBORGMwZEJVVlZHUW5kTlFrMUJkMGRCTVZWa1JYZEZRaTkzVVVOTlFVRjNTRkZaUkZaU01FOUNRbGxGUmtSU1VIVnpPV3hqVG05bk4zUTViUW80YjBKV1dVWllNSGxhYjFKTlFqaEhRVEZWWkVsM1VWbE5RbUZCUmtoblZXczRURm92ZVVNd09VeDFVMmhWU0ZKQk9VVXhhekZWVkUxRGMwZEJNVlZrQ2tWUlVXdE5RMHREU1VOdmRWbFlRbmRqZVRWMldUTlNka3hYVG5Oa1dFNHdXbGhKZFZwWFVtNWFVekZ6V1ZkSmRXSnRWakJOUVRCSFExTnhSMU5KWWpNS1JGRkZRa04zVlVGQk5FbENRVkZEYldoVGNHZHBOV3h0VEZSNU1qVkhlbG93VEdkbWJtRk5XVUZ5VUVnemVFdFRjRnByVjNkV05UZElUazlZVTI0MFNBcDNSWE5IVEhOeGFHTTVZbGd5ZDBGV1FWaDNkMGw2T1RaeWJ5OUxkSFUzTWpGNE5XbDFVVlJqVmxGeVJHc3lia2xpVlN0R1EwOTVWaTlIUmpkRFpXWnlDa2xPYUdsR1RYSnJkMDA0Vm1KM2EzQk1lbEYwV2s5TEx6bG1ObHBOV0hwdWRXb3JkMHh4ZDJwR09TOVJWV3d4WVRNd01VRkViWEJzU0RSek1IUnllbElLYzFWc2RYQjJRblp2Ym05dVZtUjFTMU13UTI5T09HOXpUV1ZTTTBkelEwTjBTbko0YjJ0amRrcExTV1IxUzI1NmFqZFFRVzlVYVZsMFYzTkdXSEZ5UWdwd1MwTkZaMWRzWlRjMlQxTlZiV3BSVEc5eFJHZGpWWE1yWm5GQk1sWTBNVUU0YVhoS1MyRk1NVXAzV0ZCR1kwaFRVM2MwU1dsVFVsSk5aMng2UWtkSENuUXZUVzQ0VDJaUFYxRkZPWGgzYmxsWVlVcElNbWRoTmsxc2NYVm9abXgyZDNJemNBb3RMUzB0TFVWT1JDQkRSVkpVU1VaSlEwRlVSUzB0TFMwdENpMHRMUzB0UWtWSFNVNGdRMFZTVkVsR1NVTkJWRVV0TFMwdExRcE5TVWxFUkVSRFEwRm1VMmRCZDBsQ1FXZEpRa0ZVUVU1Q1oydHhhR3RwUnpsM01FSkJVWE5HUVVSQmJVMVRVWGRKWjFsRVZsRlJSRVJDZEhCaWJXUjVDbHBZVG5wTVZ6bDNXbGhLYUdSSE9YbFJSRVV5VGtSSk1rMXFhM3BQVkd0M1NHaGpUazFxU1hkTlZFVTFUV3BGTVU1cVRUUlhhR05PVFdwUmQwMVVSVFVLVFdwRk1VNXFUVFZYYWtGdFRWTlJkMGxuV1VSV1VWRkVSRUowY0dKdFpIbGFXRTU2VEZjNWQxcFlTbWhrUnpsNVVVUkZNazVFU1RKTmFtdDZUMVJyZHdwblowVnBUVUV3UjBOVGNVZFRTV0l6UkZGRlFrRlJWVUZCTkVsQ1JIZEJkMmRuUlV0QmIwbENRVkZFUWtOMGNqRXZPRlJ3ZUhabWEyVTNhRVZMVEZaT0NqUlBibEZ1UTNaV1ZqVlhhWGhLVWpKelp6VmtWbXRyVURFeU5IZzNibmRKYTJvMU1qVklLek5wTUdGdlVISjBTVGxEWnpnNVNtdHJVbWxZTUhRM2IzWUtSMnRVV0hKeVMzTmtabWRtZUdKak1VaDBjamd6VkZwemFVZHBZazVKU25KVE0wSjVjelJKY1dWQmFGQlFSRGt2WTFoUk9XYzFSRzFNUkZKa05VOVhRUXBHZVZwU1FsbDJhRkpKWTBNeVpGTlZaM0p0T1V4cWQwTlhabGRPZDBOT05sTmxTSFpUTXpjMk9GaE5TVFl6TVhoVWFqbElhRlJrYTJvdldFNUtXRTQwQ25ZemR6ZENUMVZqYVUxcFJIWlRVa1o0ZDB4b1R6RlFVVFpYYVU5aE5sSlFWblUwYzNaaU4xSlNMMk55TldNMVZXMHljbTVLWVhKNFZUZGtPR2d6U1VzS1pVWTFaVWxGZVRkT1dsVm1iMjlVVldOMVNERkNOVFU1WmxabWQzRXhja001UVVGWGF6TnNOVXRFYVVGRVduSTVRMUU1YWpWVWF5OVpWa3hKWldobFRncEJaMDFDUVVGSGFsSlVRa1JOUVRSSFFURlZaRVIzUlVJdmQxRkZRWGRKUTNCRVFWTkNaMDVXU0ZKTlFrRm1PRVZEUkVGSFFWRklMMEZuUlVGTlFqQkhDa0V4VldSRVoxRlhRa0pTTkVaS1VFTXlaamhuZEZCVE4ydHZWa0l3VVZCU1RscE9Wa1Y2UVU1Q1oydHhhR3RwUnpsM01FSkJVWE5HUVVGUFEwRlJSVUVLVGtSSmExVlBiMlZ4ZEZaRFltWlVORTFLTTBkT1pGRmxlWGhKYkVoRGFEQk5ZeXRrZFVvNVYwOU5PRVpMTlU5MlQzcHFXV0ZHVkVZelVsUXJlV0ZJUXdwMWRFRkdjMUo1Y1hwdGIxbDJjRlpTVUVVdmFVbHhhVFZKTm01Nk5TOUtZa012ZWxRNVdEVkROVWM0WW1kUVpsazVSSEpMZGpCek16Wmhaa016VG1KbENqZEdZM0kwUjJSWWExbHNVMmw1UkhFeFJFY3ZaQzlYWjJwb2JHOXBNakJVVkhWNk5qWjFiV3RIZGxwRVdHZEdVMXB2TVdaVlZVazNkVzlPUmxwSFZEZ0tUVlJMZEdOSU5VOHZhM012UnpKWmEyUnBSa292TTNsWllteDFlbmxDZW1wekt5dEthRTlYYUhSRU1GWnlUMDV5YmxCNlYyNVNZVVJ5V0ZCNWMxQk9aZ28zT0VFMFVIVm9lRXBRYlVjMWEyMHJXSFpzZERNMVFsbE9jMmhuUmxaT09FZDVka3RxVlV0c1MwdG5XVFJ5WjB4bGFVeHdjVlZsYml0MVRWWjNUWGR0Q2xndlZIWk5SMGRPT1c5WU9YbEhlWHBqTnpOb1FYYzlQUW90TFMwdExVVk9SQ0JEUlZKVVNVWkpRMEZVUlMwdExTMHRDZz09CiAgICBzZXJ2ZXI6IGh0dHBzOi8vYXBpLm9jdG8tY2x1c3Rlci5lZGdlLWxhYi5uZXQ6NjQ0MwogIG5hbWU6IGRlZmF1bHQtY2x1c3Rlcgpjb250ZXh0czoKLSBjb250ZXh0OgogICAgY2x1c3RlcjogZGVmYXVsdC1jbHVzdGVyCiAgICBuYW1lc3BhY2U6IGRlZmF1bHQKICAgIHVzZXI6IGRlZmF1bHQtYXV0aAogIG5hbWU6IGRlZmF1bHQtY29udGV4dApjdXJyZW50LWNvbnRleHQ6IGRlZmF1bHQtY29udGV4dApraW5kOiBDb25maWcKcHJlZmVyZW5jZXM6IHt9CnVzZXJzOgotIG5hbWU6IGRlZmF1bHQtYXV0aAogIHVzZXI6CiAgICB0b2tlbjogZXlKaGJHY2lPaUpTVXpJMU5pSXNJbXRwWkNJNkluQndPRlJpVVRCeWNXZE1kVkF6UnpZNVltNVRSbUkxUVVndFNXeE5hM013VTBkd2RUbENTbFUxU1VraWZRLmV5SnBjM01pT2lKcmRXSmxjbTVsZEdWekwzTmxjblpwWTJWaFkyTnZkVzUwSWl3aWEzVmlaWEp1WlhSbGN5NXBieTl6WlhKMmFXTmxZV05qYjNWdWRDOXVZVzFsYzNCaFkyVWlPaUp0YVdOeWIzTm9hV1owTFcxcU1pSXNJbXQxWW1WeWJtVjBaWE11YVc4dmMyVnlkbWxqWldGalkyOTFiblF2YzJWamNtVjBMbTVoYldVaU9pSnRhV055YjNOb2FXWjBMVzFxTWkxaWIyOTBjM1J5WVhBdGMyRXRkRzlyWlc0dE4yZDJibkVpTENKcmRXSmxjbTVsZEdWekxtbHZMM05sY25acFkyVmhZMk52ZFc1MEwzTmxjblpwWTJVdFlXTmpiM1Z1ZEM1dVlXMWxJam9pYldsamNtOXphR2xtZEMxdGFqSXRZbTl2ZEhOMGNtRndMWE5oSWl3aWEzVmlaWEp1WlhSbGN5NXBieTl6WlhKMmFXTmxZV05qYjNWdWRDOXpaWEoyYVdObExXRmpZMjkxYm5RdWRXbGtJam9pT0dFNFlUSXdNall0WkdZNU5TMDBZbVZoTFRnMFlXRXROalk0T0dSalpUY3pOakE0SWl3aWMzVmlJam9pYzNsemRHVnRPbk5sY25acFkyVmhZMk52ZFc1ME9tMXBZM0p2YzJocFpuUXRiV295T20xcFkzSnZjMmhwWm5RdGJXb3lMV0p2YjNSemRISmhjQzF6WVNKOS42amRvbGVBTlFna3NaaHBqRHF6dDVvTnREQkY3V1hzbTcyRUdjQ1FldXJOQ1V0RV9hVFMyekR4eVdmNXVaUDJ2dzVwQTRRUkNPdEVXY3Y4eWJFU0RMUFNPQ3VLd2xlcUtkYlJLRW1xdXlXeFdNUzEwYzE1WTZiTFpEeVFZYUV2alU4M0xHWFE4amZRQTVpbGplX0lfdE9hTnF6Q09XT1R4NkRKN2RPOUV0VWVNclM2cXBJSUg5TjZvOUg3c3VYczkyeU9aNnVVTTM1TDRla1BIM2xaYi1STHBLY2hvR2VzS2ZGejFMQmpHZC12bC1qS0VwNlF1aXpGTmQ5SlJWRktaVXRpYzlvMlZjdGdRXzMtUWdKa04tdEFHSXR4ZmhUcS1TZzg0ZW9odWZMUlJSSEIyWDFKR3hJV0N6VTBxenlYbkR4RDJRRVpRN3hfaXBKRGYzMjI0bHVDV2t3aExWMFp0dDdwVGctRFZxUURxblNSaXpkMDA3cUwtV0hhTDY3XzdGUGNfUi1lYllrN29QQV9FSkN1UGg3N2txcWdiZXNXcWdNRmZBM1R1UVFiOF95SF9FNFMzZHJOcTdXSGlCSzNvSENzR1VzT3lJU29NY0N0NVZycWRhX01mcGJiMTRIeVZicGk0VEJFQmY1dHpFUFZBVGo5N2EzX2drZzJXY3BVNmxycnpIRExlTUZCc0ZUSWZTOEx5T25nS2hFVk82QlQ3WXR4dnRKMHVqX0NVV3lObVdXekw4MVN4ZlM2N3hSazNKd0NQZlRhYnU1el9ySkNfMzNzRndhRzlORnNqcm9XSXhMU0NoV3RFLTNFZlgydlp5dk1NbUxWVGMtR0Y4b1dvRlhBTVhWUHpvVmpsS2dzQVRpU2t6eEZDM1hrQzJqODRMYUJ1NDh0ejE4RQo="

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: klusterlet
rules:
- apiGroups: [""]
  resources: ["secrets", "configmaps", "serviceaccounts"]
  verbs: ["create", "get", "list", "update", "watch", "patch", "delete"]
- apiGroups: ["authorization.k8s.io"]
  resources: ["subjectaccessreviews"]
  verbs: ["create"]
- apiGroups: [""]
  resources: ["namespaces"]
  verbs: ["create", "get", "list", "watch","delete"]
- apiGroups: [""]
  resources: ["nodes"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["", "events.k8s.io"]
  resources: ["events"]
  verbs: ["create", "patch", "update"]
- apiGroups: ["apps"]
  resources: ["deployments"]
  verbs: ["create", "get", "list", "update", "watch", "patch", "delete"]
- apiGroups: ["rbac.authorization.k8s.io"]
  resources: ["clusterrolebindings", "rolebindings"]
  verbs: ["create", "get", "list", "update", "watch", "patch", "delete"]
- apiGroups: ["rbac.authorization.k8s.io"]
  resources: ["clusterroles", "roles"]
  verbs: ["create", "get", "list", "update", "watch", "patch", "delete", "escalate", "bind"]
- apiGroups: ["apiextensions.k8s.io"]
  resources: ["customresourcedefinitions"]
  verbs: ["create", "get", "list", "update", "watch", "patch", "delete"]
- apiGroups: ["operator.open-cluster-management.io"]
  resources: ["klusterlets"]
  verbs: ["get", "list", "watch", "update", "patch", "delete"]
- apiGroups: ["operator.open-cluster-management.io"]
  resources: ["klusterlets/status"]
  verbs: ["update", "patch"]
- apiGroups: ["work.open-cluster-management.io"]
  resources: ["appliedmanifestworks"]
  verbs: ["list", "update", "patch"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: open-cluster-management:klusterlet-admin-aggregate-clusterrole
  labels:
    rbac.authorization.k8s.io/aggregate-to-admin: "true"
rules:
- apiGroups: ["operator.open-cluster-management.io"]
  resources: ["klusterlets"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: klusterlet
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: klusterlet
subjects:
- kind: ServiceAccount
  name: klusterlet
  namespace: "open-cluster-management-agent"

---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: klusterlet
  namespace: "open-cluster-management-agent"
  labels:
    app: klusterlet
spec:
  replicas: 1
  selector:
    matchLabels:
      app: klusterlet
  template:
    metadata:
      annotations:
        target.workload.openshift.io/management: '{"effect": "PreferredDuringScheduling"}'
      labels:
        app: klusterlet
    spec:
      serviceAccountName: klusterlet
      tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/infra
          operator: Exists
      containers:
      - name: klusterlet
        image: registry.redhat.io/rhacm2/registration-rhel8-operator@sha256:568d3b5dc4da1dd35c68d1405c274933d6129462b5873e929e25a444c50f1d6b
        imagePullPolicy: IfNotPresent
        args:
          - "/registration-operator"
          - "klusterlet"
        livenessProbe:
          httpGet:
            path: /healthz
            scheme: HTTPS
            port: 8443
          initialDelaySeconds: 2
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /healthz
            scheme: HTTPS
            port: 8443
          initialDelaySeconds: 2

---
apiVersion: operator.open-cluster-management.io/v1
kind: Klusterlet
metadata:
  name: klusterlet
spec:
  registrationImagePullSpec: "registry.redhat.io/rhacm2/registration-rhel8@sha256:574b41e19bf26043f985fcfac8e8cd9384f1b37aba4d4eb3be3901ae6a427081"
  workImagePullSpec: "registry.redhat.io/rhacm2/work-rhel8@sha256:b5c1519fda361b17f90ce895de2587d0b95692660fb79988ca2f21f71267ebe1"
  clusterName: "microshift-mj2"
  namespace: "open-cluster-management-agent"
  nodePlacement:
    tolerations:
    - effect: NoSchedule
      key: node-role.kubernetes.io/infra
      operator: Exists

---
apiVersion: v1
kind: Secret
metadata:
  name: "open-cluster-management-image-pull-credentials"
  namespace: "open-cluster-management-agent"
type: kubernetes.io/dockerconfigjson
data:
    .dockerconfigjson: eyJhdXRocyI6eyJjbG91ZC5vcGVuc2hpZnQuY29tIjp7ImF1dGgiOiJiM0JsYm5Ob2FXWjBMWEpsYkdWaGMyVXRaR1YySzNKdWIzSnBaV2RoY21Wa2FHRjBZMjl0TVdodGRIRjRZWE14YkdkeGNuRnJhREJsYVhsb2NHaGphbUo2T2pkSVFUa3hWbEpEVUVKWlVsUkRORVJSV0ZRMk0wdE1VbGxHVWpGRE5GbFFRVTFPVUVWQlEwY3hOMFJKT0U4Mk5rZEpObEZKUlZnMlVVeFFVa0ZWTmprPSIsImVtYWlsIjoicm5vcmllZ2FAcmVkaGF0LmNvbSJ9LCJxdWF5LmlvIjp7ImF1dGgiOiJiM0JsYm5Ob2FXWjBMWEpsYkdWaGMyVXRaR1YySzNKdWIzSnBaV2RoY21Wa2FHRjBZMjl0TVdodGRIRjRZWE14YkdkeGNuRnJhREJsYVhsb2NHaGphbUo2T2pkSVFUa3hWbEpEVUVKWlVsUkRORVJSV0ZRMk0wdE1VbGxHVWpGRE5GbFFRVTFPVUVWQlEwY3hOMFJKT0U4Mk5rZEpObEZKUlZnMlVVeFFVa0ZWTmprPSIsImVtYWlsIjoicm5vcmllZ2FAcmVkaGF0LmNvbSJ9LCJyZWdpc3RyeS5jb25uZWN0LnJlZGhhdC5jb20iOnsiYXV0aCI6Ik56a3hPVFkwTkh4MWFHTXRNVWhOVkZGNFlWTXhUR2R4VWxGTGFEQkZhVmxvVUdoRFNrSjZPbVY1U21oaVIyTnBUMmxLVTFWNlZYaE5hVW81TG1WNVNucGtWMGxwVDJsSmVFOUhXbXBPZWxFelQxUm5lVTlFVFRCT2FrRjRUMVJPYkUxNlZtcE5WR00xVG5wck1rMVVhekJOZVVvNUxtZHliblZ6U21NMlpFUmthM3AwTm5nNVlqZG9OVlZLU1hVNVlVWklTVGRzVlVOeFNERlRkbVpWTmxadlNVbGtkRjlHVkVsUVVUQlBRVmR5TTFKS1ZreFRNRXQxTjBONk1XWmFkVzR6TTNOUVlsbFlSM1F3VkRsT1ozcFRVRXhMZEdOYVVqbDNVRWR6YUU5RVEyOHhWSG8yVFZBM1ZXTnBSVkprVHpGYVNFaGlZVFJ0VVdWRGVGbHFVVTlzYm5jNGRrbElaSEpyVUhZd1lrWXpOR1IyUm1FeWIwcFRiWGhZVjFGNGRFdDNkV1ZuVHpNNWFtaFhRalpUUTBFNWIyNVVSVTFPVGs5b09GcEZORjl6UjBaNmJuVTNXbkJETWpsTU9FWmZSVGRhVWxSU2RrTnZaVFI2WkV4YWRGcFdORVZxYlc1RGIzSXhVRTVOYW5ZM2VsVlhWR2xTU1RCR1gzaElSMlJIVldWdGRDMUlSVVYxZWxwWWIzSllMVnB5YUhseFFXbHVjVGhSV2toYVRubE9WSE56VmxOZlVIYzFhMDVQUldOd2RWaEZSMHMyWlRKTmMyNVFWbTVUU0dVNGJUSmtVVXRsZWtNM2ExSjFhVFU1ZERFME9FVjFTbVZVU2psVGRqRkdNSFpDYm0xRlNXZHNRbUZuT1hjeFdVdHhkRzB3TkdoWFFtYzJXRkF6YTFkdk1rUllNR1J4U0VKallsRTJNM1ZYWWxCUU9WZHVYekZXYkV4S1gyTmpVV0ZrUjA5dmFFSkRUWEpGY0haNVRpMXFNbkZoVkhsdmVUZEZTVE5TV1hCSFRFMDBWbVJVVVdvNVYwOWFlVVZSU1V0TldtcDRXR3RGU21OUlVqUjVSR2xSY2xKSGFEQjBWWEUxTjBGelVsbG9VbEpWWjNWek1XcHJXVGxEZDNoRk1GbERVMnRmVG5WdFVtUXlOR3hOUmxOTVRsQlJjbEpIUmxKaFNIaHRVVFI1VUdsNFgyOUlTMmxFWHpoVWFIUkxNMVl5YWxRNFpqRlZPSHBKZVVaWGVUbDJTVGxoTmtaT1ZFaHBURlJyYlY5Wk4yVmxZV3A1VkU5SE5sSnRVR2RIVjFaQlZGVlpRelJSU1ZaWGQyMWhPRE4yU1dsNmFHZFNWSGRPT1hGak1VMTVVUzFVUVU5ek9ESTBRa3RhVGtVMVJYVnhNRmhpT0hCcFYzQTNaVWxIT0ZCQiIsImVtYWlsIjoicm5vcmllZ2FAcmVkaGF0LmNvbSJ9LCJyZWdpc3RyeS5yZWRoYXQuaW8iOnsiYXV0aCI6Ik56a3hPVFkwTkh4MWFHTXRNVWhOVkZGNFlWTXhUR2R4VWxGTGFEQkZhVmxvVUdoRFNrSjZPbVY1U21oaVIyTnBUMmxLVTFWNlZYaE5hVW81TG1WNVNucGtWMGxwVDJsSmVFOUhXbXBPZWxFelQxUm5lVTlFVFRCT2FrRjRUMVJPYkUxNlZtcE5WR00xVG5wck1rMVVhekJOZVVvNUxtZHliblZ6U21NMlpFUmthM3AwTm5nNVlqZG9OVlZLU1hVNVlVWklTVGRzVlVOeFNERlRkbVpWTmxadlNVbGtkRjlHVkVsUVVUQlBRVmR5TTFKS1ZreFRNRXQxTjBONk1XWmFkVzR6TTNOUVlsbFlSM1F3VkRsT1ozcFRVRXhMZEdOYVVqbDNVRWR6YUU5RVEyOHhWSG8yVFZBM1ZXTnBSVkprVHpGYVNFaGlZVFJ0VVdWRGVGbHFVVTlzYm5jNGRrbElaSEpyVUhZd1lrWXpOR1IyUm1FeWIwcFRiWGhZVjFGNGRFdDNkV1ZuVHpNNWFtaFhRalpUUTBFNWIyNVVSVTFPVGs5b09GcEZORjl6UjBaNmJuVTNXbkJETWpsTU9FWmZSVGRhVWxSU2RrTnZaVFI2WkV4YWRGcFdORVZxYlc1RGIzSXhVRTVOYW5ZM2VsVlhWR2xTU1RCR1gzaElSMlJIVldWdGRDMUlSVVYxZWxwWWIzSllMVnB5YUhseFFXbHVjVGhSV2toYVRubE9WSE56VmxOZlVIYzFhMDVQUldOd2RWaEZSMHMyWlRKTmMyNVFWbTVUU0dVNGJUSmtVVXRsZWtNM2ExSjFhVFU1ZERFME9FVjFTbVZVU2psVGRqRkdNSFpDYm0xRlNXZHNRbUZuT1hjeFdVdHhkRzB3TkdoWFFtYzJXRkF6YTFkdk1rUllNR1J4U0VKallsRTJNM1ZYWWxCUU9WZHVYekZXYkV4S1gyTmpVV0ZrUjA5dmFFSkRUWEpGY0haNVRpMXFNbkZoVkhsdmVUZEZTVE5TV1hCSFRFMDBWbVJVVVdvNVYwOWFlVVZSU1V0TldtcDRXR3RGU21OUlVqUjVSR2xSY2xKSGFEQjBWWEUxTjBGelVsbG9VbEpWWjNWek1XcHJXVGxEZDNoRk1GbERVMnRmVG5WdFVtUXlOR3hOUmxOTVRsQlJjbEpIUmxKaFNIaHRVVFI1VUdsNFgyOUlTMmxFWHpoVWFIUkxNMVl5YWxRNFpqRlZPSHBKZVVaWGVUbDJTVGxoTmtaT1ZFaHBURlJyYlY5Wk4yVmxZV3A1VkU5SE5sSnRVR2RIVjFaQlZGVlpRelJSU1ZaWGQyMWhPRE4yU1dsNmFHZFNWSGRPT1hGak1VMTVVUzFVUVU5ek9ESTBRa3RhVGtVMVJYVnhNRmhpT0hCcFYzQTNaVWxIT0ZCQiIsImVtYWlsIjoicm5vcmllZ2FAcmVkaGF0LmNvbSJ9fX0=
